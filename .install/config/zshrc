stty -ixon

unsetopt beep

if [[ -f ~/\#_my_config/prompt.zsh ]]; then
	source ~/\#_my_config/prompt.zsh
fi

# ╔════════════════╗
# ║       KEY      ║
# ╚════════════════╝

bindkey "^[[H" beginning-of-line
bindkey "^[[F" end-of-line
bindkey "^[[3~" delete-char
bindkey "^[[1;2H" kill-region
bindkey "^[[1;2D" backward-word
bindkey "^[[1;2C" forward-word

# ╔════════════════╗
# ║   COMPLETION   ║
# ╚════════════════╝

autoload -U compinit && compinit
zmodload zsh/complist

export LS_COLORS='di=0;34:ln=35:so=32:pi=0;33:ex=32:bd=34;46:cd=34;43:su=0;41:sg=0;46:tw=0;34:ow=0;34:'
zstyle ':completion:*' menu select=0
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}

bindkey -M menuselect '^[[Z' reverse-menu-complete
bindkey -M menuselect '^[[1;2A' reverse-menu-complete
bindkey -M menuselect '^[[1;2B' menu-complete
bindkey -M menuselect '^M' .accept-line

# ╔════════════════╗
# ║      ALIAS     ║
# ╚════════════════╝

function cdls()
{
	local locallast
	local localhome
	if [ $# -eq 0 ]; then
		cd
	else
		if [[ $1 == *.c ]]; then
			if [ `dirname $1 | wc -c` -gt '2' ]; then
				locallast=`basename $1`
				localhome=`echo $1`
				localhome=`echo $1 | sed 's/\(.*\)'${locallast}'/\1/'`
				cd $localhome
				vim $locallast
			else
				vim $1
			fi
		elif [[ $1 == *.h ]]; then
			if [ `dirname $1 | wc -c` -gt '2' ]; then
				locallast=`basename $1`
				localhome=`echo $1`
				localhome=`echo $1 | sed 's/\(.*\)'${locallast}'/\1/'`
				cd $localhome
				vim $locallast
			else
				vim $1
			fi
		else
			cd $*
		fi
	fi
	localhome=`echo "$PWD" | sed 's/'"${HOME//\//\\/}"'//'`
	if [[ -n $localhome ]]; then
		ls -a -G
	else
		ls -G
	fi
}

function vicd()
{
	local locallast
	local localhome
	if [ $# -eq 0 ]; then
		ls -a -G
	elif [ -d "$1" ];then
		cdls $1
	else
		if [ `dirname $1 | wc -c` -gt '2' ]; then
			locallast=`basename $1`
			localhome=`echo $1`
			localhome=`echo $1 | sed 's/\(.*\)'${locallast}'/\1/'`
			cd $localhome
			vim $locallast
		else
			vim $1
		fi
	fi
}

function lss()
{
	local localhome
	localhome=`echo "$PWD" | sed 's/'"${HOME//\//\\/}"'//'`
	if [ $# -eq 0 ]; then
		if [[ -n $localhome ]]; then
			ls -a -G
		else
			ls -G
		fi
	else
		ls -G $*
	fi
}

function mkdircd()
{
	mkdir $*
	cdls $*
}

function ftgitp()
{
	local d
	d=`date +%Y-%m-%d\ %H:%M:%S`
	if [ $# -eq 0 ]; then
		git add --all && git commit -m "$d refresh git" && git push origin master && git ls-files
	else
		git add --all && git commit -m "$*" && git push origin master && git ls-files
	fi
}

function fftgitp()
{
	local d
	d=`date +%Y-%m-%d\ %H:%M:%S`
	if [ $# -eq 0 ]; then
		git add --all && git commit -m "$d force git" && git push origin master --force && git ls-files
	else
		git add --all && git commit -m "$*" && git push origin master --force && git ls-files
	fi
}

function ftgitc()
{
	local filename
	if [[ $1 == *"github.com"* ]]; then
		filename=`echo $1 | rev | cut -d/ -f1 | rev`
	else
		filename=`echo $1 | rev | cut -d/ -f2 | rev`
	fi
	if [ -d $filename ]; then
		filename+=`echo 2`
	fi
	if [ $# -eq 1 ]; then
		git clone "$1" $filename && cdls $filename
	else
		git clone "$1" "$2" && cdls "$2"
	fi
}

function correction()
{
	if [ $# -eq 0 ]; then
		cd ~/correction
		ls -a -G
	else
		local filename1
		filename1=`echo $1 | rev | cut -d/ -f2 | rev`
		local filename2
		filename2=`echo $1 | rev | cut -d/ -f1 | rev`
		cd ~/correction
		if [ ! -d $filename2 ]; then
			mkdir $filename2
		fi
		cd $filename2
		git clone "$1" $filename1
		cd $filename1
		ls -la -G
		cat -e auteur
	fi
}

function norme()
{
	if [ $# -eq 0 ]; then
		dot_c=`find . -iname "*.c"`
		dot_h=`find . -iname "*.h"`
		norminette $dot_c $dot_h
	else
		norminette $*
	fi
}

function cauteur()
{
	echo $USER > auteur && git add auteur && git commit -m "add auteur" && git push origin master
}

function libft_cp()
{
	cp -r ~/libc/libft ./libft
}

function speedstart()
{
	mkdir includes
	mkdir srcs
	libft_cp
	cp libft/includes/libft.h includes/libft.h
	echo "" > .gitignore
	echo "includes/libft.h" >> .gitignore
	vi Makefile
}

function clear_cache()
{
	killall Google\ Chrome
	find ~ -name ".DS_Store" -exec rm {} \;
	rm -rf ~/Library/Caches
	mkdir ~/Library/Caches
}

function logout_func()
{
	clear_cache
	echo "test"
	/Applications/helper.app/Contents/MacOS/helper logout
}

function pwdsave()
{
	echo "$PWD" > ~/.pwd
}

function cdsave()
{
	cd `cat ~/.pwd`
}

# ╔════════════════╗
# ║       CD       ║
# ╚════════════════╝

alias cd='cdls'
alias ..='cd ..'
alias /.='cd -'
alias cd..='cd ..'

alias xs='cd'

# ╔════════════════╗
# ║       MK       ║
# ╚════════════════╝

alias mk='mkdircd'

# ╔════════════════╗
# ║     LOGOUT     ║
# ╚════════════════╝

alias logout='logout_func'

# ╔════════════════╗
# ║      CLR       ║
# ╚════════════════╝

alias clr='clear_cache'

# ╔════════════════╗
# ║       LS       ║
# ╚════════════════╝

alias ls='lss'
alias ll='ls -lhaG'

# ╔════════════════╗
# ║      GCC       ║
# ╚════════════════╝

alias gcw='gcc -Wall -Werror -Wextra'
alias g+w='g++ -Wall -Werror -Wextra'
alias gall='g++ -Wall -Werror -Wextra *.cpp'
alias gcc3d='gcc3d'
alias gci='gcc -I .'

# ╔════════════════╗
# ║      GIT       ║
# ╚════════════════╝

alias gti='git'
alias fgit='ftgitp'
alias ffgit='fftgitp'
alias cgit='ftgitc'
alias gll='git ls-files'

# ╔════════════════╗
# ║     MACRO      ║
# ╚════════════════╝

alias speedstart='speedstart'

# ╔════════════════╗
# ║    VIM EDIT    ║
# ╚════════════════╝

alias vrc='vi ~/\#_my_config/vimrc;cd -'
alias syntax='vi ~/.vim/syntax/c.vim;cd -'

alias -s c='vim'
alias -s h='vim'
alias -s vim='vim'

# ╔════════════════╗
# ║   GIT AUTEUR   ║
# ╚════════════════╝

alias autor='cauteur'

# ╔════════════════╗
# ║      PDF       ║
# ╚════════════════╝

alias pdf='open ~/pdf'

# ╔════════════════╗
# ║     NORME      ║
# ╚════════════════╝

alias save_pwd='pwdsave'
alias /='cdsave'

# ╔════════════════╗
# ║     NORME      ║
# ╚════════════════╝

alias vinorme='vi ~/program/norme-checker.py'
alias lognorminator='perl ~/program/norminator.perl --auth'

# ╔════════════════╗
# ║     SPEED      ║
# ╚════════════════╝

alias src='vi ~/\#_my_config/zshrc;cd -'
alias cplibft='cp -r ~/1_Semestre/algorithmie-I/libft ./libft'
alias correction='correction'
alias github='open ~/program/GitHub.app'
alias rb='~/program/ruby-2.1.0/bin/ruby'

# ╔════════════════╗
# ║       VI       ║
# ╚════════════════╝

alias v='vicd'
alias vi='vicd'
alias vu='vicd'
alias vo='vicd'
alias ci='vicd'
alias cu='vicd'
alias co='vicd'

# ╔════════════════╗
# ║      MAKE      ║
# ╚════════════════╝

alias creatmake='sh ~/program/MakeMakefile.zsh'
alias refreshmake='sh ~/program/MakeMakefile.zsh'

# ╔════════════════╗
# ║     CHMOD      ║
# ╚════════════════╝

alias red='chmod 777 '
alias white='chmod 644 '
alias chdir='chmod 777 '

# ╔════════════════╗
# ║   LOCKSCREEN   ║
# ╚════════════════╝

alias bitnami='open ~/Mamp/manager-osx.app'
alias refresh='cpbitnami'

# ╔════════════════╗
# ║   CURENT TAFF  ║
# ╚════════════════╝

alias chrome='open -n -a /Applications/Google\ Chrome.app --args --incognito'

alias lockscreen='/System/Library/CoreServices/Menu\ Extras/user.menu/Contents/Resources/CGSession -suspend'
alias sb='~/#_my_config/stop_bruit.sh&'
